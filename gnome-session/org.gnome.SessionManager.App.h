/*
 * Generated by gdbus-codegen 2.54.0. DO NOT EDIT.
 *
 * The license of this code is the same as for the source it was derived from.
 */

#ifndef __ORG_GNOME_SESSIONMANAGER_APP_H__
#define __ORG_GNOME_SESSIONMANAGER_APP_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for org.gnome.SessionManager.App */

#define GSM_TYPE_EXPORTED_APP (gsm_exported_app_get_type ())
#define GSM_EXPORTED_APP(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), GSM_TYPE_EXPORTED_APP, GsmExportedApp))
#define GSM_IS_EXPORTED_APP(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), GSM_TYPE_EXPORTED_APP))
#define GSM_EXPORTED_APP_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), GSM_TYPE_EXPORTED_APP, GsmExportedAppIface))

struct _GsmExportedApp;
typedef struct _GsmExportedApp GsmExportedApp;
typedef struct _GsmExportedAppIface GsmExportedAppIface;

struct _GsmExportedAppIface
{
  GTypeInterface parent_iface;

  gboolean (*handle_get_app_id) (
    GsmExportedApp *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_get_phase) (
    GsmExportedApp *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_get_startup_id) (
    GsmExportedApp *object,
    GDBusMethodInvocation *invocation);

};

GType gsm_exported_app_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *gsm_exported_app_interface_info (void);
guint gsm_exported_app_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void gsm_exported_app_complete_get_app_id (
    GsmExportedApp *object,
    GDBusMethodInvocation *invocation,
    const gchar *app_id);

void gsm_exported_app_complete_get_startup_id (
    GsmExportedApp *object,
    GDBusMethodInvocation *invocation,
    const gchar *startup_id);

void gsm_exported_app_complete_get_phase (
    GsmExportedApp *object,
    GDBusMethodInvocation *invocation,
    guint phase);



/* D-Bus method calls: */
void gsm_exported_app_call_get_app_id (
    GsmExportedApp *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean gsm_exported_app_call_get_app_id_finish (
    GsmExportedApp *proxy,
    gchar **out_app_id,
    GAsyncResult *res,
    GError **error);

gboolean gsm_exported_app_call_get_app_id_sync (
    GsmExportedApp *proxy,
    gchar **out_app_id,
    GCancellable *cancellable,
    GError **error);

void gsm_exported_app_call_get_startup_id (
    GsmExportedApp *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean gsm_exported_app_call_get_startup_id_finish (
    GsmExportedApp *proxy,
    gchar **out_startup_id,
    GAsyncResult *res,
    GError **error);

gboolean gsm_exported_app_call_get_startup_id_sync (
    GsmExportedApp *proxy,
    gchar **out_startup_id,
    GCancellable *cancellable,
    GError **error);

void gsm_exported_app_call_get_phase (
    GsmExportedApp *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean gsm_exported_app_call_get_phase_finish (
    GsmExportedApp *proxy,
    guint *out_phase,
    GAsyncResult *res,
    GError **error);

gboolean gsm_exported_app_call_get_phase_sync (
    GsmExportedApp *proxy,
    guint *out_phase,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define GSM_TYPE_EXPORTED_APP_PROXY (gsm_exported_app_proxy_get_type ())
#define GSM_EXPORTED_APP_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), GSM_TYPE_EXPORTED_APP_PROXY, GsmExportedAppProxy))
#define GSM_EXPORTED_APP_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), GSM_TYPE_EXPORTED_APP_PROXY, GsmExportedAppProxyClass))
#define GSM_EXPORTED_APP_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), GSM_TYPE_EXPORTED_APP_PROXY, GsmExportedAppProxyClass))
#define GSM_IS_EXPORTED_APP_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), GSM_TYPE_EXPORTED_APP_PROXY))
#define GSM_IS_EXPORTED_APP_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), GSM_TYPE_EXPORTED_APP_PROXY))

typedef struct _GsmExportedAppProxy GsmExportedAppProxy;
typedef struct _GsmExportedAppProxyClass GsmExportedAppProxyClass;
typedef struct _GsmExportedAppProxyPrivate GsmExportedAppProxyPrivate;

struct _GsmExportedAppProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  GsmExportedAppProxyPrivate *priv;
};

struct _GsmExportedAppProxyClass
{
  GDBusProxyClass parent_class;
};

GType gsm_exported_app_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GsmExportedAppProxy, g_object_unref)
#endif

void gsm_exported_app_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
GsmExportedApp *gsm_exported_app_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
GsmExportedApp *gsm_exported_app_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void gsm_exported_app_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
GsmExportedApp *gsm_exported_app_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
GsmExportedApp *gsm_exported_app_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define GSM_TYPE_EXPORTED_APP_SKELETON (gsm_exported_app_skeleton_get_type ())
#define GSM_EXPORTED_APP_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), GSM_TYPE_EXPORTED_APP_SKELETON, GsmExportedAppSkeleton))
#define GSM_EXPORTED_APP_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), GSM_TYPE_EXPORTED_APP_SKELETON, GsmExportedAppSkeletonClass))
#define GSM_EXPORTED_APP_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), GSM_TYPE_EXPORTED_APP_SKELETON, GsmExportedAppSkeletonClass))
#define GSM_IS_EXPORTED_APP_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), GSM_TYPE_EXPORTED_APP_SKELETON))
#define GSM_IS_EXPORTED_APP_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), GSM_TYPE_EXPORTED_APP_SKELETON))

typedef struct _GsmExportedAppSkeleton GsmExportedAppSkeleton;
typedef struct _GsmExportedAppSkeletonClass GsmExportedAppSkeletonClass;
typedef struct _GsmExportedAppSkeletonPrivate GsmExportedAppSkeletonPrivate;

struct _GsmExportedAppSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  GsmExportedAppSkeletonPrivate *priv;
};

struct _GsmExportedAppSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType gsm_exported_app_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GsmExportedAppSkeleton, g_object_unref)
#endif

GsmExportedApp *gsm_exported_app_skeleton_new (void);


G_END_DECLS

#endif /* __ORG_GNOME_SESSIONMANAGER_APP_H__ */
