/*
 * Generated by gdbus-codegen 2.54.0. DO NOT EDIT.
 *
 * The license of this code is the same as for the source it was derived from.
 */

#ifndef __ORG_GNOME_SESSIONMANAGER_CLIENT_H__
#define __ORG_GNOME_SESSIONMANAGER_CLIENT_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for org.gnome.SessionManager.Client */

#define GSM_TYPE_EXPORTED_CLIENT (gsm_exported_client_get_type ())
#define GSM_EXPORTED_CLIENT(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), GSM_TYPE_EXPORTED_CLIENT, GsmExportedClient))
#define GSM_IS_EXPORTED_CLIENT(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), GSM_TYPE_EXPORTED_CLIENT))
#define GSM_EXPORTED_CLIENT_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), GSM_TYPE_EXPORTED_CLIENT, GsmExportedClientIface))

struct _GsmExportedClient;
typedef struct _GsmExportedClient GsmExportedClient;
typedef struct _GsmExportedClientIface GsmExportedClientIface;

struct _GsmExportedClientIface
{
  GTypeInterface parent_iface;

  gboolean (*handle_get_app_id) (
    GsmExportedClient *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_get_restart_style_hint) (
    GsmExportedClient *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_get_startup_id) (
    GsmExportedClient *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_get_status) (
    GsmExportedClient *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_get_unix_process_id) (
    GsmExportedClient *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_stop) (
    GsmExportedClient *object,
    GDBusMethodInvocation *invocation);

};

GType gsm_exported_client_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *gsm_exported_client_interface_info (void);
guint gsm_exported_client_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void gsm_exported_client_complete_get_app_id (
    GsmExportedClient *object,
    GDBusMethodInvocation *invocation,
    const gchar *app_id);

void gsm_exported_client_complete_get_startup_id (
    GsmExportedClient *object,
    GDBusMethodInvocation *invocation,
    const gchar *startup_id);

void gsm_exported_client_complete_get_restart_style_hint (
    GsmExportedClient *object,
    GDBusMethodInvocation *invocation,
    guint hint);

void gsm_exported_client_complete_get_unix_process_id (
    GsmExportedClient *object,
    GDBusMethodInvocation *invocation,
    guint pid);

void gsm_exported_client_complete_get_status (
    GsmExportedClient *object,
    GDBusMethodInvocation *invocation,
    guint status);

void gsm_exported_client_complete_stop (
    GsmExportedClient *object,
    GDBusMethodInvocation *invocation);



/* D-Bus method calls: */
void gsm_exported_client_call_get_app_id (
    GsmExportedClient *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean gsm_exported_client_call_get_app_id_finish (
    GsmExportedClient *proxy,
    gchar **out_app_id,
    GAsyncResult *res,
    GError **error);

gboolean gsm_exported_client_call_get_app_id_sync (
    GsmExportedClient *proxy,
    gchar **out_app_id,
    GCancellable *cancellable,
    GError **error);

void gsm_exported_client_call_get_startup_id (
    GsmExportedClient *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean gsm_exported_client_call_get_startup_id_finish (
    GsmExportedClient *proxy,
    gchar **out_startup_id,
    GAsyncResult *res,
    GError **error);

gboolean gsm_exported_client_call_get_startup_id_sync (
    GsmExportedClient *proxy,
    gchar **out_startup_id,
    GCancellable *cancellable,
    GError **error);

void gsm_exported_client_call_get_restart_style_hint (
    GsmExportedClient *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean gsm_exported_client_call_get_restart_style_hint_finish (
    GsmExportedClient *proxy,
    guint *out_hint,
    GAsyncResult *res,
    GError **error);

gboolean gsm_exported_client_call_get_restart_style_hint_sync (
    GsmExportedClient *proxy,
    guint *out_hint,
    GCancellable *cancellable,
    GError **error);

void gsm_exported_client_call_get_unix_process_id (
    GsmExportedClient *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean gsm_exported_client_call_get_unix_process_id_finish (
    GsmExportedClient *proxy,
    guint *out_pid,
    GAsyncResult *res,
    GError **error);

gboolean gsm_exported_client_call_get_unix_process_id_sync (
    GsmExportedClient *proxy,
    guint *out_pid,
    GCancellable *cancellable,
    GError **error);

void gsm_exported_client_call_get_status (
    GsmExportedClient *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean gsm_exported_client_call_get_status_finish (
    GsmExportedClient *proxy,
    guint *out_status,
    GAsyncResult *res,
    GError **error);

gboolean gsm_exported_client_call_get_status_sync (
    GsmExportedClient *proxy,
    guint *out_status,
    GCancellable *cancellable,
    GError **error);

void gsm_exported_client_call_stop (
    GsmExportedClient *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean gsm_exported_client_call_stop_finish (
    GsmExportedClient *proxy,
    GAsyncResult *res,
    GError **error);

gboolean gsm_exported_client_call_stop_sync (
    GsmExportedClient *proxy,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define GSM_TYPE_EXPORTED_CLIENT_PROXY (gsm_exported_client_proxy_get_type ())
#define GSM_EXPORTED_CLIENT_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), GSM_TYPE_EXPORTED_CLIENT_PROXY, GsmExportedClientProxy))
#define GSM_EXPORTED_CLIENT_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), GSM_TYPE_EXPORTED_CLIENT_PROXY, GsmExportedClientProxyClass))
#define GSM_EXPORTED_CLIENT_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), GSM_TYPE_EXPORTED_CLIENT_PROXY, GsmExportedClientProxyClass))
#define GSM_IS_EXPORTED_CLIENT_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), GSM_TYPE_EXPORTED_CLIENT_PROXY))
#define GSM_IS_EXPORTED_CLIENT_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), GSM_TYPE_EXPORTED_CLIENT_PROXY))

typedef struct _GsmExportedClientProxy GsmExportedClientProxy;
typedef struct _GsmExportedClientProxyClass GsmExportedClientProxyClass;
typedef struct _GsmExportedClientProxyPrivate GsmExportedClientProxyPrivate;

struct _GsmExportedClientProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  GsmExportedClientProxyPrivate *priv;
};

struct _GsmExportedClientProxyClass
{
  GDBusProxyClass parent_class;
};

GType gsm_exported_client_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GsmExportedClientProxy, g_object_unref)
#endif

void gsm_exported_client_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
GsmExportedClient *gsm_exported_client_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
GsmExportedClient *gsm_exported_client_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void gsm_exported_client_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
GsmExportedClient *gsm_exported_client_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
GsmExportedClient *gsm_exported_client_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define GSM_TYPE_EXPORTED_CLIENT_SKELETON (gsm_exported_client_skeleton_get_type ())
#define GSM_EXPORTED_CLIENT_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), GSM_TYPE_EXPORTED_CLIENT_SKELETON, GsmExportedClientSkeleton))
#define GSM_EXPORTED_CLIENT_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), GSM_TYPE_EXPORTED_CLIENT_SKELETON, GsmExportedClientSkeletonClass))
#define GSM_EXPORTED_CLIENT_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), GSM_TYPE_EXPORTED_CLIENT_SKELETON, GsmExportedClientSkeletonClass))
#define GSM_IS_EXPORTED_CLIENT_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), GSM_TYPE_EXPORTED_CLIENT_SKELETON))
#define GSM_IS_EXPORTED_CLIENT_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), GSM_TYPE_EXPORTED_CLIENT_SKELETON))

typedef struct _GsmExportedClientSkeleton GsmExportedClientSkeleton;
typedef struct _GsmExportedClientSkeletonClass GsmExportedClientSkeletonClass;
typedef struct _GsmExportedClientSkeletonPrivate GsmExportedClientSkeletonPrivate;

struct _GsmExportedClientSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  GsmExportedClientSkeletonPrivate *priv;
};

struct _GsmExportedClientSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType gsm_exported_client_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (GsmExportedClientSkeleton, g_object_unref)
#endif

GsmExportedClient *gsm_exported_client_skeleton_new (void);


G_END_DECLS

#endif /* __ORG_GNOME_SESSIONMANAGER_CLIENT_H__ */
